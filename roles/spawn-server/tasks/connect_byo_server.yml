
- name: Set MAU limit for Micro Server
  delegate_to: 127.0.0.1
  set_fact:
    swap_size: "2G"
  when: (subscription_type == "on_premises" and plan_title == "Micro On-Premises Server")

- name: Set MAU limit for Small Server
  delegate_to: 127.0.0.1
  set_fact:
    swap_size: "4G"
  when: (subscription_type == "on_premises" and plan_title == "Small On-Premises Server")

- name: Set MAU limit for Medium Server
  delegate_to: 127.0.0.1
  set_fact:
    swap_size: "8G"
  when: (subscription_type == "on_premises" and plan_title == "Medium On-Premises Server")

- name: Set MAU limit for Large Server
  delegate_to: 127.0.0.1
  set_fact:
    swap_size: "16G"
  when: (subscription_type == "on_premises" and plan_title == "Large On-Premises Server")

- name: Set MAU limit for Jumbo Server
  delegate_to: 127.0.0.1
  set_fact:
    swap_size: "64G"
  when: (subscription_type == "on_premises" and plan_title == "Jumbo On-Premises Server")

- name: Test if SSH is possible with ipv4
  delegate_to: "{{ server_ip_final }}"
  command: echo success
  register: echo_output
  when: subscription_type == "on_premises"

- debug:
    msg: "{{ echo_output.stdout }}"
  when: subscription_type == "on_premises"

- name: Disable password authentication
  delegate_to: "{{ server_ip_final }}"
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'PasswordAuthentication no'
  when: subscription_type == "on_premises"

- name: Restart SSH
  delegate_to: "{{ server_ip_final }}"
  service:
    name: ssh
    state: restarted
  when: subscription_type == "on_premises"

- name: Collect timezone of connected server (Debian and derivatives only) 
  delegate_to: "{{ server_ip_final }}"
  command: cat /etc/timezone
  register: timezone_output
  when: subscription_type == "on_premises"

- name: Set valid timezone for Jitsi instance
  delegate_to: 127.0.0.1
  set_fact:
    matrix_jitsi_timezone: "{{ timezone_output.stdout }}"
  when: subscription_type == "on_premises"

