
- name: Assign variable to server_ipv4
  delegate_to: 127.0.0.1
  command: |
    host matrix.{{ matrix_domain }} | awk '/has address/ { print $4 ; exit }'
  register: server_ipv4_raw

- name: Assign variable to server_ipv6
  delegate_to: 127.0.0.1
  command: |
    host -t AAAA matrix.{{ matrix_domain }} | awk 'NF>1{print $NF}' | sed s:record::
  register: server_ipv6_raw

- name: Save variable server_ipv4
  delegate_to: 127.0.0.1
  set_fact:
    server_ipv4: "{{ server_ipv4_raw.stdout }}"

- name: Save variable server_ipv6
  delegate_to: 127.0.0.1
  set_fact:
    server_ipv6: "{{ server_ipv6_raw.stdout }}"

- debug:
    msg: "{{ server_ipv4 }}"

- debug:
    msg: "{{ server_ipv6 }}"

- name: Test if SSH is possible
  delegate_to: 127.0.0.1
  command: ssh root@{{ server_ipv4 }} "echo success"
  register: echo_output

- debug:
    msg: "{{ echo_output.stdout }}"

- name: If connection fails transfer public key with ssh-copy-id.
  delegate_to: 127.0.0.1
  command: 'sshpass -p {{ root_password }} ssh-copy-id -i /var/lib/awx/projects/hosting/matrixtesting_ed25519.pub -o StrictHostKeyChecking=no root@{{ server_ipv4 }}'
  when: echo_output.stdout == "success"

- name: Disable password authentication
  delegate_to: "{{ server_ipv4 }}"
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'PasswordAuthentication no'

- name: Restart SSH
  delegate_to: "{{ server_ipv4 }}"
  service:
    name: ssh
    state: restarted

