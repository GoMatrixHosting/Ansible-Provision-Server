
- debug:
    msg: "{{ server_ipv4 }}"
  when: server_ipv4 is defined

- debug:
    msg: "{{ server_ipv6 }}"
  when: server_ipv6 is defined

- debug: msg="No IP address is defined, please enter the IP address of your server."
  when: server_ipv4|length == 0 and server_ipv6|length == 0

- meta: end_play
  when: server_ipv4|length == 0 and server_ipv6|length == 0

- name: Set server_ip_final if both IPv4 and IPv6 are defined.
  delegate_to: 127.0.0.1
  set_fact:
    server_ip_final: '{{ server_ipv4 }}'
  when: server_ipv4|length > 0 and server_ipv6|length > 0

- name: Set server_ip_final if only IPv4 is defined.
  delegate_to: 127.0.0.1
  set_fact:
    server_ip_final: '{{ server_ipv4 }}'
  when: server_ipv4|length > 0 and server_ipv6|length == 0

- name: Set server_ip_final if only IPv6 is defined.
  delegate_to: 127.0.0.1
  set_fact:
    server_ip_final: '{{ server_ipv6 }}'
  when: server_ipv4|length == 0 and server_ipv6|length > 0

- name: Install jq in AWX
  delegate_to: 127.0.0.1
  yum:
    name: jq
    state: latest

- name: Collect AWX admin token the hard way!
  delegate_to: 127.0.0.1
  shell: |
      curl -sku {{ tower_username }}:{{ tower_password }} -H "Content-Type: application/json" -X POST -d '{"description":"Tower CLI", "application":null, "scope":"write"}' https://{{ tower_host }}/api/v2/users/1/personal_tokens/ | jq '.token' | sed -r 's/\"//g'
  register: tower_token
  no_log: True

- name: Define server_ssh_port if not specified
  set_fact:
    server_ssh_port: 22
  when: server_ssh_port is undefined

- name: Add new host to organisations inventory
  delegate_to: 127.0.0.1
  awx.awx.tower_host:
    name: "matrix.{{ matrix_domain }}"
    description: "{{ matrix_domain }} Matrix Server"
    inventory: "{{ member_id }}"
    state: present
    variables:
      ansible_host: "{{ server_ip_final }}"
      ansible_port: "{{ server_ssh_port }}"
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes

