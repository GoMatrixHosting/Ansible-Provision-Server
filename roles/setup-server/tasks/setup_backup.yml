
- name: Install necessary utils on target machine
  delegate_to: "{{ server_ip_final }}"
  apt:
    pkg:
     - borgbackup
     - pigz

- name: Ensure /backup/ location exists
  delegate_to: "{{ server_ip_final }}"
  file:
    path: /backup
    state: directory
    owner: root
    group: root
    mode: '0644'

- name: Ensure borgmatic config directory exists
  delegate_to: "{{ server_ip_final }}"
  file:
    path: /root/.config/borgmatic
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Load Matrix variables from matrix_vars.yml in case this is the first run
  include_vars:
    file: /var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml
  no_log: True

- name: Save new 'Provision Server' survey.json to the AWX tower, template
  delegate_to: "{{ server_ip_final }}"
  template:
    src: './roles/setup-server/templates/config.yaml.j2'
    dest: '/root/.config/borgmatic/config.yaml'

- name: Run the 'borg init' command
  delegate_to: "{{ server_ip_final }}"
  command: 'borg init --encryption=repokey /backup/borg'
  environment:
    BORG_PASSPHRASE: '{{ matrix_awx_borg_password }}'

# ^ This step can be skipped after Debian 11 :)

- name: Install backup.sh script is installed
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: ./roles/setup-server/scripts/backup.sh
    dest: /root/backup.sh
    mode: '0700'

- name: Touch the backup.log file
  file:
    path: /matrix/awx/backup.log
    state: touch
    owner: root
    group: root
    mode: '0644'

- name: Creates a crontab entry for backup.sh
  cron:
    name: "Snapshot database and run borgmatic"
    user: root
    special_time: hourly
    job: "/root/backup.sh"

