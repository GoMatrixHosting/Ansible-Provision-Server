

- name: Load vars from organisation.yml
  include_vars:
    file: '/var/lib/awx/projects/clients/{{ member_id }}/organisation.yml'

# ^ Might be redundant

- name: Install tower dep
  delegate_to: 127.0.0.1
  pip:
      name: ansible-tower-cli

- name: Add new host to organisations inventory
  delegate_to: 127.0.0.1
  tower_host:
    name: "matrix.{{ matrix_domain }}"
    description: "{{ matrix_domain }} Matrix Server"
    inventory: "{{ member_id }} Inventory"
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes
  register: fs_host

- name: Create 'matrix_servers' group
  delegate_to: 127.0.0.1
  tower_group:
    name: matrix_servers
    description: "Matrix servers to deploy/configure."
    inventory: "{{ member_id }} Inventory"
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes
  register: fs_group

- name: Configure awx-cli 1
  delegate_to: 127.0.0.1
  shell: awx-cli config username "{{ tower_username }}"

- name: Configure awx-cli 2
  delegate_to: 127.0.0.1
  shell: awx-cli config password "{{ tower_password }}"

- name: Configure awx-cli 3
  delegate_to: 127.0.0.1
  shell: awx-cli config host "{{ tower_host }}"

- name: Associate host group
  delegate_to: 127.0.0.1
  shell: awx-cli host associate --host "{{ fs_host.id }}" --group "{{ fs_group.id }}"

- name: Disallow user account to use the 'Provision a New Server' job_template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ subscription_id }} - 00 - Provision a New Server"
    role: execute
    state: absent
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to read the 'Provision a New Server' job_template/history
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ subscription_id }} - 00 - Provision a New Server"
    role: read
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

# must write these in with templates

- name: Save new 'Provision Server' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/provision_survey_mp.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_mp.json'
  when: byo_bool|bool == false

- name: Re-create 'Provision a New Server' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ subscription_id }} - 00 - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_mp.json') }}"
    state: present
    verbosity: 1
    job_tags: imposter-check, digitalocean-droplet
    skip_tags: digitalocean-space
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes
  when: byo_bool|bool == false

- name: Save new 'Provision Server' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/provision_survey_byo.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_byo.json'
  when: byo_bool|bool == true

- name: Re-create 'Provision a New Server' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ subscription_id }} - 00 - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_byo.json') }}"
    state: present
    verbosity: 1
    job_tags: imposter-check, byo-server
    skip_tags: digitalocean-space, digitalocean-droplet
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes
  when: byo_bool|bool == true

- name: Create 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    description: "Creates a new matrix service with Spantaleev's playbooks"
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "setup-all,start"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Create an rrule string for a schedule for every Monday
  delegate_to: 127.0.0.1
  set_fact:
    rrule_line: "DTSTART;TZID={{ matrix_jitsi_timezone }}:20200101T000000 RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=SU,MO,TU,WE,TH,FR,SA"

- name: Build a schedule for 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_schedule:
    name: "{{ matrix_domain }} - 0 - Update Server Schedule"
    enabled: yes
    state: present
    unified_job_template: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    rrule: "{{ rrule_line }}"

- name: Create 'Start/Restart all Services' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    description: "Starts or restarts all services on the server."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Start/Restart all Services' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Create 'Stop all Services' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 0 - Stop all Services"
    description: "Stops all services on the server."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "stop"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Stop all Services' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Stop all Services"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Save new 'Configure Element' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_element.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element.json'

- name: Create 'Configure Element' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Element"
    description: "Configure Element client via survey."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start,setup-client-element"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element.json') }}"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Configure Element' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Element"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Save new 'Configure Synapse' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_synapse.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json'

- name: Create 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse"
    description: "Configure Synapse (homeserver) settings."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start,setup-synapse"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json') }}"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Synapse"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Save new 'Configure Jitsi' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_jitsi.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_jitsi.json'

- name: Create 'Configure Jitsi' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Jitsi"
    description: "Configure Jitsi conferencing settings."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start,setup-jitsi"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_jitsi.json') }}"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Configure Jitsi' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Jitsi"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Save new 'Configure Ma1sd' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_ma1sd.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_ma1sd.json'

- name: Create 'Configure Ma1sd' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Ma1sd"
    description: "Configure Ma1sd conferencing settings."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start,setup-ma1sd"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_ma1sd.json') }}"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Configure Ma1sd' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Ma1sd"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Save new 'Configure Base Domain Website' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_base_domain_website.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_base_domain_website.json'

- name: Create 'Configure Base Domain Website' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Base Domain Website"
    description: "Configure base domain website settings."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start,setup-nginx-proxy"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_base_domain_website.json') }}"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Configure Base Domain Website' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Base Domain Website"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Save initial 'Create User' survey.json to the AWX tower
  delegate_to: 127.0.0.1
  copy:
    src: './roles/modify-awx-account/surveys/create_user.json'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/create_user.json'
    mode: 0644

- name: Create 'Create User' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 2 - Create User"
    description: "Create a new user account and choose if it has admin access."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - AWX Playbooks"
    playbook: create_user.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/create_user.json') }}"
    state: present
    verbosity: 1
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

- name: Allow user account to use 'Create User' job template
  delegate_to: 127.0.0.1
  tower_role:
    user: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 2 - Create User"
    role: execute
    state: present
    tower_host: "{{ tower_host }}"
    tower_username: "{{ tower_username }}"
    tower_password: "{{ tower_password }}"
    validate_certs: yes

